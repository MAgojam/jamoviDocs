# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The section authors, The jamovi project, and Sebastian Jentschke (curating this documentation). This work is licensed under a Creative Commons Attribution-Non Commercial 4.0 International License.
# This file is distributed under the same license as the jamovi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jamovi \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-09 01:16+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_pages/info_file-format.rst:5
msgid "jamovi File Format (``.omv``)"
msgstr ""

#: ../../_pages/info_file-format.rst:7
msgid "jamovi files are ZIP-archives that contain a number of files."
msgstr ""

#: ../../_pages/info_file-format.rst:9
#: ../../_pages/info_file-format.rst:33
msgid "``META-INF/MANIFEST.MF``"
msgstr ""

#: ../../_pages/info_file-format.rst:10
#: ../../_pages/info_file-format.rst:52
msgid "``metadata.json``"
msgstr ""

#: ../../_pages/info_file-format.rst:11
#: ../../_pages/info_file-format.rst:168
msgid "``xdata.json``"
msgstr ""

#: ../../_pages/info_file-format.rst:12
#: ../../_pages/info_file-format.rst:185
msgid "``data.bin``"
msgstr ""

#: ../../_pages/info_file-format.rst:13
msgid "``strings.bin`` (optional: if an variable with the ``measureType`` = ``ID`` and the ``dataType`` = ``Text`` exist in the data set)"
msgstr ""

#: ../../_pages/info_file-format.rst:16
msgid "``index.html`` (if analyses were conducted and are stored in the .omv-file, there are subfolders, one for each analysis, containing, e.g., figures and the syntax for the analysis)"
msgstr ""

#: ../../_pages/info_file-format.rst:21
msgid "The ``metadata.json``-file is the most useful starting point when trying to decode ``.omv``-files, at least if one is interested in, e.g., importing the data. There exists already a package ``jmvReadWrite`` on CRAN if ones interest is reading or writing ``.omv``-files in R."
msgstr ""

#: ../../_pages/info_file-format.rst:26
msgid "However, sometimes, one is only interested in having a brief look at results. In such case, it is sufficient to extract the ``.omv``-file (typically with right-clicking and choosing \"Extract...\"). Afterwards, just go into the folder that was extracted and click on ``index.html``."
msgstr ""

#: ../../_pages/info_file-format.rst:35
msgid "The manifest file contains four lines defining what version of the data and the jamovi archive were used to create the ``.omv``-file. An example of the content is shown below."
msgstr ""

#: ../../_pages/info_file-format.rst:54
msgid "The file is stored in JSON (JavaScript Object Notation) which is a lightweight data-interchange format. It is quite similar to YAML (but unfortunately a little less easy to read). However, there are several packages that permit to import or export JSON, e.g., rjson inside R. Inside the ``metadata.json``-file, the name of the top level hierarchy is ``dataSet``. This top-level hierarchy contains the following branches:"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``rowCount``: number of rows in the data set"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``columnCount``: number of rows in the data set"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``removedRows``: positions where rows were removed (default: empty)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "there can be several lists with pairs of ``index`` and ``count`` under ``removedRows`` (if rows were removed at different positions in the data file)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``index``: line where lines where removed (after this line)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``count``: number of removed lines"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``addedRows``: positions where rows were added (default: empty)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "there can be several lists with pairs of ``start`` and ``end`` under ``addedRows`` (if new rows were added at several positions in the data file)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``start``: line where lines where removed (after this line)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``end``: last"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``fields``: contains description for every data column (one field per each column)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``name``: column name"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``id``: column id"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "(numerical; unique column number)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``columnType``: content that is contained in the column"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``Data`` (default), ``Computed``, ``Recoded``, ``Filter``"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``dataType``: `type of data <../getting-started/um_2_first-steps.html#data-variables>`__ contained in the column"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``Integer`` (default), ``Decimal``, ``Text``"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``measureType``: `scale level <../getting-started/um_2_first-steps.html#data-variables>`__ of the data in the column"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``ID``, ``Nominal`` (default), ``Ordinal``, ``Continuous``, ``None``"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``formula (for Computed Variables)``: formula used for calculations or filters"
msgstr ""

#: ../../_pages/info_file-format.rst:0
#: ../../_pages/info_file-format.rst:0
msgid "(default: \"\")"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``formulaMessage``: error message for malformed formulas"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``parentId``: ID of the parent object (default: 0)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``width``: column width in the jamovi data editor (default: 100)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``type``: variable class used to store the data in the binary file"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``integer``: 4 byte per cell, data type: long integer"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``number``:  8 byte per cell, data type: double"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``string``:  C-style zero-terminated character strings"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "generally are data read from ``data.bin`` with text data stored as ``integer`` and the text containedas variable levels contained in ``xdata.json``; there is one exception, though, which is if an variable with the ``measureType`` = ``ID`` is a text variable"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``importName``: name of the column when it was originally imported"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "(default: same as \"name\"; \"\" if created new)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
#: ../../_pages/info_file-format.rst:0
msgid "``description``: variable description / label (default: \"\")"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``transform``: for transformed variables?"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``edits``: marks which rows in the table where edited (can contain several ranges as those listed below)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``start`` (row)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``end`` (row)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``missingValues``: contains a list with strings containing which values are defined as missing values (default: empty); an entry could look like \"== '0'\" defining the '0' as a missing value; there can be several such entries if more than one value is defined as indicating a missing value"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``trimValues``: TRUE / FALSE (retain unused levels – trimValues``: T doesn’t retain them)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``filterNo`` (only columnType ``Filter``): unique ID for the filter"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``active`` (only columnType ``Filter``): TRUE / FALSE (filter active)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``transforms``: contains a description for every transformation rule (those rules can be applied to several columns)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``name``: name of the transformation rule"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "(e.g., \"Transform 1\")"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``id``: transformation id"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "(numerical; unique number for the transformation)"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``suffix``: ? (default: \"\")"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``formula``: formula for the transformation (e.g., \"MATCH($source, 'VC', 'OJ')\")"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``formulaMessage``: error message if the calculation of the transformation failed"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``measureType``: scale level of the transformation"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``ID``, ``Nominal``, ``Ordinal``, ``Continuous``, ``None`` (default)"
msgstr ""

#: ../../_pages/info_file-format.rst:170
msgid "This file also uses JSON-format. The file contains value-label-combinations. Each variable containing variable labels has an entry with the name of the variable as a branch name. This branch then contains the entries for the labels."
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``variable name``: variable name, matches a column ``name`` in the data frame"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "``labels``: contains a list with three values for each value labels"
msgstr ""

#: ../../_pages/info_file-format.rst:0
msgid "(e.g., [1, 'Females', 'Females']); there is one entry for each value- label-comination (i.e, there likely would be a second entry with, e.g. [2, 'Males', 'Males'])"
msgstr ""

#: ../../_pages/info_file-format.rst:181
msgid "If you have text data, jamovi stores them as numerical ("
msgstr ""

#: ../../_pages/info_file-format.rst:187
msgid "This file contains the data matrix that you can see in your jamovi-spreadsheet stored as binary data. Data are organized as columns. The arrangement of columns follows the order of the fields in ``metadata.json`` (the value of ``name`` of the field is the column name)."
msgstr ""

#: ../../_pages/info_file-format.rst:192
msgid "In order to read data from the binary file, one needs to iterate through each column, determine as as which variable ``type`` the data are stored: ``integer`` (long, 4 byte) or ``numeric`` (double, 8 bytes), and then to read the data from the column by repeating reading the number of rows (``rowCount``). Often the functions to read binary data let you give the number of occurences so that you can read a column at once."
msgstr ""

#: ../../_pages/info_file-format.rst:210
msgid "The R-code above demonstrates the steps during reading: ``i`` counts over the columns, and determines from the ``type`` of each ``field`` of the ``dataSet`` contained in ``metadata.json`` (here assigned to the variable ``mtaDta``) what type (either ``integer()`` or ``double()`` has to be read. ``n =`` permits to define the number of repetitions (how many cells). It is set to ``rowNum`` (which contains the value of ``rowCount``)."
msgstr ""

#: ../../_pages/info_file-format.rst:217
msgid "The condition where ``type`` is ``string`` is a very special one and happens rarely. One has in this case to read the C-style zero-terminated character strings from the ``strings.bin``-file and at the same time has to discard the respective column (containing ``integer()``-values) from the ``data.bin``-file."
msgstr ""

#: ../../_pages/info_file-format.rst:224
msgid "``index.html``"
msgstr ""

#: ../../_pages/info_file-format.rst:226
msgid "As mentioned above, the ``index.html`` can be obtained from extracting the ``.omv``-file of interest and the opening it in a browser. This should match the output that you can see in the right-hand panel with the results in jamovi. There might be tiny differences though (e.g., comments that you can create with jamovi [version 1.3 and above] might not show, etc.). Remember that you have to extract all files (not only ``index.html``) if you want to see the figures as well."
msgstr ""
