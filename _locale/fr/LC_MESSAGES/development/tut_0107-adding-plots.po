# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-, The section authors, The jamovi Group, and Sebastian
# Jentschke (curating this documentation). This work is licensed under a
# Creative Commons Attribution-Non Commercial 4.0 International License.
# This file is distributed under the same license as the jamovi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  jamovi\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-31 14:58+0200\n"
"PO-Revision-Date: 2020-07-20 23:22+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: French (https://www.transifex.com/jamovi/teams/111618/fr/)"
"\n"
"Plural-Forms: nplurals=2; plural=(n > 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../development/tut_0107-adding-plots.rst:5
msgid "Adding Plots"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:7
msgid ""
"In this section, we’ll add a plot to the t-test analysis we’ve been "
"developing in this series. A plot is another item to appear in the "
"results, so we’ll add another entry into our ``ttest.r.yaml`` file:"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:40
msgid ""
"Same as before, we define an item with a `name`, `title` and a `type`; in"
" this case the type is `Image`. Additionally, we define `renderFun` which"
" is the name of the function responsible for rendering the image. "
"Whatever we specify as the render function, we must add as a *private "
"member function* to `ttestClass` in `ttest.b.R`:"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:73
msgid "Adding ggplot2"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:75
msgid ""
"We’re going to use ``ggplot2`` for plotting, so make sure you have that "
"installed. To use ggplot2 in this package/module, we need to add some "
"entries into the DESCRIPTION and NAMESPACE files. We add ggplot2 to the "
"imports line in the DESCRIPTION, so it reads:"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:84
msgid "and we’ll add the following line into NAMESPACE:"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:90
msgid ""
"These entries are standard for using R code from other packages in a "
"package. More information is available in `Writing R Extensions "
"<https://cran.r-project.org/doc/manuals/r-release/R-exts.html>`__."
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:94
msgid "Now we have ggplot2 ready, we can proceed with using it in our analysis."
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:97
msgid "Implementing Plots"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:99
msgid ""
"In jamovi modules, plotting occurs in two stages; first the data for the "
"plot is prepared, then the plot is rendered. The two stages mean that if "
"the image is resized, or the user requests a different file format, only "
"the rendering needs to be performed again — the data preparation needs "
"only to occur once."
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:105
msgid ""
"For the t-test, we’re going to plot a mean for each of the groups, and "
"the standard errors. In ``ggplot2``, we’re required to assemble these "
"‘plot points’ into a data frame, which we will do as follows:"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:122
msgid "This plot data we assign to the image using the ``setState()`` function:"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:129
msgid ""
"Next, we’ll add the plotting code into the ``.plot()`` function we "
"created:"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:144
msgid ""
"The plot function accepts an argument ``image``, which corresponds to the"
" image object we called ``setState()`` on. We can retrieve the state "
"object from this image with ``image$state``, which we can see is being "
"assigned to ``plotData``."
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:149
msgid ""
"Following this are a number of calls to ``ggplot2`` functions. A full "
"discussion of how to use ggplot2 is **well and truly** beyond the scope "
"of this document, but there are many excellent resources available "
"online."
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:154
msgid ""
"Next we explicitly print the ggplot object. When using ggplot "
"interactively in an R session, calling ``ggplot()`` leads to the creation"
" of the plot, however, when calling ggplot from inside a function, it is "
"necessary to explicitly call ``print()``."
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:159
msgid ""
"The final statement is ``TRUE`` which is the return value. Don’t forget "
"this! Returning true notifies the rendering system that you have plotted "
"something. If you don’t return true, your plot will not appear. There are"
" situations where the user may not have specified enough information for "
"plotting, in which case the function should return ``FALSE``."
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:165
msgid "So this is our final ``ttest.b.R`` file:"
msgstr ""

#: ../../development/tut_0107-adding-plots.rst:205
msgid "And these are our final results, including the plot:"
msgstr ""

#~ msgid "|final-plot|"
#~ msgstr ""

