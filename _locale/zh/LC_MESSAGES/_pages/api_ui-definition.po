# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The section authors, The jamovi project, and Sebastian
# Jentschke (curating this documentation). This work is licensed under a
# Creative Commons Attribution-Non Commercial 4.0 International License.
# This file is distributed under the same license as the jamovi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jamovi \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-09 00:59+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../_pages/api_ui-definition.rst:5
msgid "User-interface definition (``.u.yaml`` files)"
msgstr ""

#: ../../_pages/api_ui-definition.rst:8
msgid "Overview"
msgstr ""

#: ../../_pages/api_ui-definition.rst:10
msgid ""
"The UI YAML is pretty straight forward. It follows a tree structure that "
"defines the child/parent relationship between the controls. The top level"
" or root control is the first thing that is described by the UI YAML."
msgstr ""

#: ../../_pages/api_ui-definition.rst:16
msgid "Properties"
msgstr ""

#: ../../_pages/api_ui-definition.rst:19
msgid "Property"
msgstr ""

#: ../../_pages/api_ui-definition.rst:19
msgid "Description"
msgstr ""

#: ../../_pages/api_ui-definition.rst:19
msgid "Form"
msgstr ""

#: ../../_pages/api_ui-definition.rst:21
msgid "``name``"
msgstr ""

#: ../../_pages/api_ui-definition.rst:21
msgid "The name of the analysis."
msgstr ""

#: ../../_pages/api_ui-definition.rst:21
msgid "Unique string"
msgstr ""

#: ../../_pages/api_ui-definition.rst:23
msgid "``title``"
msgstr ""

#: ../../_pages/api_ui-definition.rst:23
msgid "Sets the title to be displayed at the top of the option panel."
msgstr ""

#: ../../_pages/api_ui-definition.rst:23
msgid "string"
msgstr ""

#: ../../_pages/api_ui-definition.rst:26
msgid "``jus``"
msgstr ""

#: ../../_pages/api_ui-definition.rst:26
msgid "Defines the syntax version used by the u.yaml file."
msgstr ""

#: ../../_pages/api_ui-definition.rst:26
msgid "string of form ‘number.number’"
msgstr ""

#: ../../_pages/api_ui-definition.rst:29
msgid "``stage``"
msgstr ""

#: ../../_pages/api_ui-definition.rst:29
msgid "Sets the stage display filter."
msgstr ""

#: ../../_pages/api_ui-definition.rst:29
msgid "0 - Released 1 - In development 2 - Proposed"
msgstr ""

#: ../../_pages/api_ui-definition.rst:33
msgid "``compilerMode``"
msgstr ""

#: ../../_pages/api_ui-definition.rst:33
msgid "Sets the compiler interaction mode."
msgstr ""

#: ../../_pages/api_ui-definition.rst:33
msgid "*enum*: tame, aggressive"
msgstr ""

#: ../../_pages/api_ui-definition.rst:36
msgid "``children``"
msgstr ""

#: ../../_pages/api_ui-definition.rst:36
msgid "Sets the child control definitions."
msgstr ""

#: ../../_pages/api_ui-definition.rst:36
msgid "Array of valid control definitions."
msgstr ""

#: ../../_pages/api_ui-definition.rst:41
msgid "Example"
msgstr ""

#: ../../_pages/api_ui-definition.rst:54
msgid "Further Detail"
msgstr ""

#: ../../_pages/api_ui-definition.rst:56
msgid ""
"The root control is a ```ParentControl`` <ui_parentcontrol.html>`__ and "
"as the name suggests serves as a parent to child controls. All parent "
"controls contain the property ``children`` which defines an array of "
"control definitions to be embedded. All UI design happens within the "
"``children`` node of the root control. Control definitions are added here"
" in the form we design."
msgstr ""

#: ../../_pages/api_ui-definition.rst:63
msgid ""
"When controls are added to the root control they are added in a list "
"form, from top to bottom of the options panel."
msgstr ""

#: ../../_pages/api_ui-definition.rst:67
msgid "Controls"
msgstr ""

#: ../../_pages/api_ui-definition.rst:69
msgid ""
"There are many different controls that can be used within the jamovi "
"options UI panel. Each control has been designed for a specific option "
"type(s). For example, a ``CheckBox`` is designed around a ``Bool`` option"
" type, where as a ``ComboBox`` displays and writes data to a ``List`` "
"option. Jamovi provides a solid array of basic controls to cover all the "
"current option types. Controls will continue to be developed as jamovi "
"grows but the current list covers most use cases."
msgstr ""

#: ../../_pages/api_ui-definition.rst:77
msgid ""
"When adding child controls to any ``ParentControl``, at the very least "
"the ``type`` property needs to be specified (as well as the minimum "
"requirements for that control)."
msgstr ""

#: ../../_pages/api_ui-definition.rst:97
msgid ""
"Now we can add, move or adjust any control to meet our needs. Here is a "
"list of controls that can make that possible:"
msgstr ""

