# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The section authors, The jamovi Group, and Sebastian Jentschke (curating this documentation). This work is licensed under a Creative Commons Attribution-Non Commercial 4.0 International License.
# This file is distributed under the same license as the jamovi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jamovi\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-01 00:23+0200\n"
"PO-Revision-Date: 2020-07-20 23:22+0000\n"
"Language-Team: Turkish (https://www.transifex.com/jamovi/teams/111618/tr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../development/tut_0103-creating-an-analysis.rst:5
msgid "Creating an analysis"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:8
msgid "T-Test"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:10
msgid ""
"In this section, we are going to add a t-test analysis to the module we "
"created in the previous section."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:13
msgid ""
"An *independent samples t-test* is typically used to determine whether two "
"groups differ on some variable. For example, you may be interested in "
"whether children from one neighbourhood are a different height than children"
" from another neighbourhood. In this case, a data set would have one row for"
" each child - one column would contain their heights, the other column would"
" contain which neighbourhood they are from."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:20
msgid ""
"For those familiar with the ``t.test`` function built into R, if the columns"
" were ``height`` and ``neighbourhood``, the test could be run:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:27
msgid ""
"In this next section, we are going to create a t-test jamovi analysis which "
"makes use of this function."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:31
msgid "Creating an Analysis"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:33
msgid ""
"The easiest way to begin an analysis for a jamovi module is to use the "
"``addAnalysis()`` function from the ``jmvtools`` package. First we’ll set "
"the working directory to the ``SuperAwesome`` directory (created by "
"``jmvtools::create()`` in the previous section), and then call "
"``addAnalysis()``"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:45
msgid "Anatomy of an Analysis"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:47
msgid "If we now look at the ``SuperAwesome`` module’s source tree, we have:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:63
msgid ""
"At this point I’m a little embarrassed to say that there are **5** files per"
" analysis. This structure does make things a lot more manageable, so "
"although it may seem excessive at first, there’s a good rationale behind it."
" Just bear with me, it’s not as overwhelming as it seems."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:72
msgid "file"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:72
msgid "contains"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:74
msgid "ttest.a.yaml |api_a|"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:74
msgid ""
"The *analysis definition* contains all the meta information about the "
"analysis, describes the arguments and ui options it receives, etc. We’ll "
"cover this in the tutorial next."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:79
msgid "ttest.r.yaml |api_r|"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:79
msgid ""
"The *results definition* contains all the information about the way the "
"results for the analysis are displayed."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:83
msgid "ttest.u.yaml |api_u|"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:83
msgid ""
"The *ui definition* is automatically generated from the ``.a.yaml`` file. "
"For many analyses this will produce a good result, and won’t need further "
"editing."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:88
msgid "ttest.h.R"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:88
msgid ""
"The *header file* is automatically generated from the ``.a.yaml`` and "
"``.r.yaml`` files above, and makes writing your analysis a lot easier. You "
"don’t ever need to look at this file, and you certainly shouldn’t edit it."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:94
msgid "ttest.b.R"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:94
msgid ""
"The *analysis implementation* is where you’ll write your analysis, and where"
" you’ll spend most of your time when developing jamovi analyses. As we’ll "
"see, this is an empty template waiting for an implementation."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:102
msgid "The Analysis Definition"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:104
msgid ""
"First up, we’ll look at the *analysis definition* in the ``ttest.a.yaml`` "
"file. yaml is a simple, easy to read text format for structured data. If "
"you’re new to yaml, you can read more about the format `here "
"<http://yaml.org/spec/1.2/spec.html>`__, but that probably won’t be "
"necessary. It’s intuitive and readable, and you’ll probably have no trouble "
"picking it up."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:111
msgid ""
"``jmvtools::addAnalysis()`` creates a default ``.a.yaml`` file with a "
"handful of basic options. Happily for this tutorial, these happen to "
"correspond to the options that a t-test requires. Our generated "
"``ttest.a.yaml`` file is as follows:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:151
msgid "At the top of the file is information about the analysis:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:160
msgid ""
"The name is a unique identifier for the analysis, but it also corresponds to"
" the name of the R function which will be made available from the package. "
"As such, the usual constraints on function names apply: it must begin with a"
" letter, and can only be made up of letters and numbers (jamovi disallows "
"analysis names with dots in them)."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:166
msgid ""
"The title of the analysis is how the analysis appears in menus, help text, "
"and in the results. Next is the ``jas`` or ‘jamovi analysis spec’; you "
"should just leave this at ‘1.1’. Next, we have the analysis version. Each "
"analysis is versioned in jamovi, and you should make use of `semantic "
"versioning <http://semver.org/>`__ (but let’s not worry about that for now)."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:173
msgid ""
"The options come next; ``data``, ``dep``, ``group``, ``alt`` and ``varEq``. "
"When used as an R package, these options correspond to the arguments passed "
"to the analysis R function. In this case they will be:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:181
msgid ""
"(If you peek inside ``ttest.h.R``, you’ll find this exact function has been "
"generated.)"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:184
msgid ""
"When used in jamovi, these options correspond to the UI options for the "
"analysis. Let’s look at that now. Install the module we’ve just created and "
"open up jamovi (or open up jamovi first, then install the module — the order"
" doesn’t matter):"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:193
msgid ""
"(Note that if your module has additional dependencies, these will be "
"installed by `jmvtools::install()` at this stage as well. You can read more "
"about additional dependencies in [Additional Notes](tut_0109-additional-"
"notes.html) at the end of this tutorial.)"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:196
msgid ""
"The `SuperAwesome` menu will now be available, and will contain `Independent"
" Samples T-Test`."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:200
msgid "Selecting this analysis will bring up the UI:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:204
msgid ""
"We can see how the UI elements created, correspond to the analyses' options."
" Revisiting the `dep` and `group` options from `ttestis.a.yaml`:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:216
msgid ""
"We see they are of type ``Variable``. This means they require the user to "
"provide a column from the data set. As can be seen in the UI, they are "
"represented as ‘drop targets’, where columns from the data set can be "
"assigned through drag and drop."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:221
msgid "Turning to the option ``alt``:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:237
msgid ""
"``alt`` is of type list, which has been turned into a drop down list, "
"allowing the user to choose between the options."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:240
msgid "Finally, looking at ``varEq``:"
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:249
msgid "We see that options of type ``Bool`` are represented as checkboxes."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:251
msgid ""
"There are a number of different option types. A more comprehensive "
"description of each of them, and their properties is available in the `API "
"<api_analysis-definition.html>`__."
msgstr ""

#: ../../development/tut_0103-creating-an-analysis.rst:255
msgid ""
"Of course, our analysis doesn’t actually do anything yet – we haven’t "
"written any R code."
msgstr ""
